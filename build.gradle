import groovy.json.JsonSlurper
import groovy.json.JsonOutput

buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
    }
}
apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "eclipse"

//ext.config = parseConfig(file("build.properties"))
file "build.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = "${config.release_version}-mc${config.mc_version}"
group = "kais.outfox"
archivesBaseName = "${config.release_modid}"

sourceCompatibility = targetCompatibility = "1.8"
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = "${config.mc_version}-${config.forge_version}"
    runDir = "run"
    mappings = "snapshot_20171003"

    replace("gradle%modid", config.release_modid)
    replace("gradle%name", config.release_name)
    replace("gradle%version", config.release_version)

    replaceIn "OutfoxResources.java"
}

repositories {
    maven { // theoneprobe
        name = "tterag maven"
        url = "http://maven.tterrag.com"
    }
    maven { // waila
        name = "tehnut maven"
        url = "http://tehnut.info/maven"
    }
}

dependencies {
    deobfProvided "mcjty.theoneprobe:TheOneProbe-1.12:1.12-1.4.28-17"
    deobfProvided "mcp.mobius.waila:Hwyla:1.8.26-B41_1.12.2"
}

processResources {
    // this will ensure that this task is redone when the versions change
    inputs.property "version", "${config.release_version}-$project{mc_version}"
    inputs.property "mcversion", "${config.mc_version}-${config.forge_version}"

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "modid":config.release_modid, "name":config.release_name, "version":config.release_version, "mcversion":"${config.mc_version}-${config.forge_version}"
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}
